/*TODO
jar {
    manifest { 
        instruction 'X-Web-Resource-Version', '1.1'
        instruction 'X-Web-Resource', '/manager/js/xsf/devinfo;/manager/js/xsf/devinfo'
    }
}
*/
// TODO: move template to resources, just substitute here
task template {
    doLast {
        def html = '<span>'
        def stage = 'DEV'
        if (rootProject.hasProperty('svnpath')) {
            def path = rootProject.svnpath.tokenize('/')
            if (path.size() > 2 && path[0] == 'tags' && path[1] == 'sprints') {
                stage = 'UAT'
                html += "<span class=\"badge tag\">stage</span><span class=\"badge value stage\">UAT</span>"
                html += "<span class=\"badge tag\">sprint</span><span class=\"badge value svn\">${path[2]}</span>"
            } else if (path.size() > 2 && (path[0] == 'tags' || path[0] == 'branches') && path[1] == 'releases') {
                stage = 'RTW'
                html += "<span class=\"badge tag\">stage</span><span class=\"badge value stage\">RTW</span>"
                html += "<span class=\"badge tag\">release</span><span class=\"badge value svn\">${path[2]}</span>"
            } else if (path.size() == 1 && path[0] == 'trunk') {
                /*if (rootProject.hasProperty('buildtag')) {
            html += "<span class=\"badge tag\">build</span><span class=\"badge value build\">${rootProject.buildtag.toLowerCase()}</span>"
            }*/
                stage = 'CI'
                html += "<span class=\"badge tag\">stage</span><span class=\"badge value stage\">CI</span>"
                html += "<span class=\"badge tag\">svn</span><span class=\"badge value svn\">${path[0]}</span>"
            }
        } else {
            html += "<span class=\"badge tag\">stage</span><span class=\"badge value stage\">DEV</span>"
        }
        if (rootProject.hasProperty('revision')) {
            html += "<span class=\"badge tag\">rev</span><span class=\"badge value revision\">$rootProject.revision</span>"
        }
        /*if (rootProject.hasProperty('buildid')) {
    SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss")
    def then = format1.parse( rootProject.buildid )
    def now = new Date()
    def age = getDuration(now.time - then.time)
    // TODO: ist so quatsch, muss nach js
    html += "<span class=\"badge tag\">age</span><span class=\"badge value age\">$age</span>"
    }*/
        if (stage == 'DEV' || stage == 'CI') {
            html += "<a href=\"../system/console/bundles\" target=\"_blank\"><span class=\"badge tag\">bundles</span><span class=\"badge value bundles\"></span></a>"
            html += "<a href=\"../system/console/iPOJO/instances\" target=\"_blank\"><span class=\"badge tag\">ipojos</span><span class=\"badge value ipojos\"></span></a>"
        }
        html += "<span class=\"badge tag\">mem</span><span class=\"badge value memory\"></span>"

        html += '</span>'
        file("$buildDir/resources/main/manager/js/xsf/devinfo/DevInfoWidget/template.html").text = html
    }
}
processResources.finalizedBy template

