plugins {
    alias catalog.plugins.node
}

maturity = 'PROPOSAL'

dependencies {
    provided project(':xtraplatform-web')
}

//TODO: encapsulate in xtraplatform-module-js

ext {
    generatedResourcesDir = new File(project.buildDir, 'generated/src/main/resources/')
}

project.sourceSets.main.output.dir(generatedResourcesDir)

node {
    version = '16.15.1'
    yarnVersion = '1.22.19'
    download = project.findProperty('downloadNode') != 'false' ?: false
}

yarn_install {
    inputs.file("src/main/javascript/package.json")
    inputs.file("../../yarn.lock")
    outputs.dir("../../node_modules")
    outputs.dir("../../.yarn/cache")
    execOverrides {
        it.workingDir = 'src/main/javascript'
    }
}

task yarn_build(type: YarnTask) {
    dependsOn yarn_install
    inputs.file("src/main/javascript/package.json")
    inputs.file("../../yarn.lock")
    inputs.dir("src/main/javascript/src")
    outputs.dir(generatedResourcesDir)
    execOverrides {
        it.workingDir = 'src/main/javascript'
    }
    args = ['run', 'build']
}

yarn_start {
    execOverrides {
        it.workingDir = 'src/main/javascript'
    }
}

processResources.dependsOn yarn_build
